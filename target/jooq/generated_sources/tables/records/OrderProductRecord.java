/*
 * This file is generated by jOOQ.
 */
package generated_sources.tables.records;


import generated_sources.tables.OrderProduct;

import java.math.BigDecimal;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OrderProductRecord extends UpdatableRecordImpl<OrderProductRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.order_product.id</code>.
     */
    public OrderProductRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.order_product.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.order_product.order_id</code>.
     */
    public OrderProductRecord setOrderId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.order_product.order_id</code>.
     */
    public Long getOrderId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.order_product.product_id</code>.
     */
    public OrderProductRecord setProductId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.order_product.product_id</code>.
     */
    public Long getProductId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.order_product.total_price</code>.
     */
    public OrderProductRecord setTotalPrice(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.order_product.total_price</code>.
     */
    public BigDecimal getTotalPrice() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.order_product.quantity</code>.
     */
    public OrderProductRecord setQuantity(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.order_product.quantity</code>.
     */
    public Long getQuantity() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderProductRecord
     */
    public OrderProductRecord() {
        super(OrderProduct.ORDER_PRODUCT);
    }

    /**
     * Create a detached, initialised OrderProductRecord
     */
    public OrderProductRecord(Long id, Long orderId, Long productId, BigDecimal totalPrice, Long quantity) {
        super(OrderProduct.ORDER_PRODUCT);

        setId(id);
        setOrderId(orderId);
        setProductId(productId);
        setTotalPrice(totalPrice);
        setQuantity(quantity);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OrderProductRecord
     */
    public OrderProductRecord(generated_sources.tables.pojos.OrderProduct value) {
        super(OrderProduct.ORDER_PRODUCT);

        if (value != null) {
            setId(value.getId());
            setOrderId(value.getOrderId());
            setProductId(value.getProductId());
            setTotalPrice(value.getTotalPrice());
            setQuantity(value.getQuantity());
            resetChangedOnNotNull();
        }
    }
}
