/*
 * This file is generated by jOOQ.
 */
package generated_sources.tables.records;


import generated_sources.tables.Image;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ImageRecord extends UpdatableRecordImpl<ImageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.image.id</code>.
     */
    public ImageRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.image.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.image.product_id</code>.
     */
    public ImageRecord setProductId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.image.product_id</code>.
     */
    public Long getProductId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.image.image_url</code>.
     */
    public ImageRecord setImageUrl(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.image.image_url</code>.
     */
    public String getImageUrl() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImageRecord
     */
    public ImageRecord() {
        super(Image.IMAGE);
    }

    /**
     * Create a detached, initialised ImageRecord
     */
    public ImageRecord(Integer id, Long productId, String imageUrl) {
        super(Image.IMAGE);

        setId(id);
        setProductId(productId);
        setImageUrl(imageUrl);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ImageRecord
     */
    public ImageRecord(generated_sources.tables.pojos.Image value) {
        super(Image.IMAGE);

        if (value != null) {
            setId(value.getId());
            setProductId(value.getProductId());
            setImageUrl(value.getImageUrl());
            resetChangedOnNotNull();
        }
    }
}
