/*
 * This file is generated by jOOQ.
 */
package generated_sources.tables.records;


import generated_sources.tables.ShoppingCart;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ShoppingCartRecord extends UpdatableRecordImpl<ShoppingCartRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.shopping_cart.id</code>.
     */
    public ShoppingCartRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.shopping_cart.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.shopping_cart.user_id</code>.
     */
    public ShoppingCartRecord setUserId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.shopping_cart.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.shopping_cart.product_id</code>.
     */
    public ShoppingCartRecord setProductId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.shopping_cart.product_id</code>.
     */
    public Long getProductId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.shopping_cart.created_at</code>.
     */
    public ShoppingCartRecord setCreatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.shopping_cart.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.shopping_cart.update_at</code>.
     */
    public ShoppingCartRecord setUpdateAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.shopping_cart.update_at</code>.
     */
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.shopping_cart.total_price</code>.
     */
    public ShoppingCartRecord setTotalPrice(BigDecimal value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.shopping_cart.total_price</code>.
     */
    public BigDecimal getTotalPrice() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.shopping_cart.quantity</code>.
     */
    public ShoppingCartRecord setQuantity(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.shopping_cart.quantity</code>.
     */
    public Long getQuantity() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShoppingCartRecord
     */
    public ShoppingCartRecord() {
        super(ShoppingCart.SHOPPING_CART);
    }

    /**
     * Create a detached, initialised ShoppingCartRecord
     */
    public ShoppingCartRecord(Long id, Long userId, Long productId, LocalDateTime createdAt, LocalDateTime updateAt, BigDecimal totalPrice, Long quantity) {
        super(ShoppingCart.SHOPPING_CART);

        setId(id);
        setUserId(userId);
        setProductId(productId);
        setCreatedAt(createdAt);
        setUpdateAt(updateAt);
        setTotalPrice(totalPrice);
        setQuantity(quantity);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ShoppingCartRecord
     */
    public ShoppingCartRecord(generated_sources.tables.pojos.ShoppingCart value) {
        super(ShoppingCart.SHOPPING_CART);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setProductId(value.getProductId());
            setCreatedAt(value.getCreatedAt());
            setUpdateAt(value.getUpdateAt());
            setTotalPrice(value.getTotalPrice());
            setQuantity(value.getQuantity());
            resetChangedOnNotNull();
        }
    }
}
