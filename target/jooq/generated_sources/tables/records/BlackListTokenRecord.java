/*
 * This file is generated by jOOQ.
 */
package generated_sources.tables.records;


import generated_sources.tables.BlackListToken;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BlackListTokenRecord extends UpdatableRecordImpl<BlackListTokenRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.black_list_token.id</code>.
     */
    public BlackListTokenRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.black_list_token.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.black_list_token.expirytime</code>.
     */
    public BlackListTokenRecord setExpirytime(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.black_list_token.expirytime</code>.
     */
    public LocalDateTime getExpirytime() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BlackListTokenRecord
     */
    public BlackListTokenRecord() {
        super(BlackListToken.BLACK_LIST_TOKEN);
    }

    /**
     * Create a detached, initialised BlackListTokenRecord
     */
    public BlackListTokenRecord(String id, LocalDateTime expirytime) {
        super(BlackListToken.BLACK_LIST_TOKEN);

        setId(id);
        setExpirytime(expirytime);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BlackListTokenRecord
     */
    public BlackListTokenRecord(generated_sources.tables.pojos.BlackListToken value) {
        super(BlackListToken.BLACK_LIST_TOKEN);

        if (value != null) {
            setId(value.getId());
            setExpirytime(value.getExpirytime());
            resetChangedOnNotNull();
        }
    }
}
